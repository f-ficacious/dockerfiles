---
version: "3.5"
services:

### Routing

#  gluetun:
#    image: qmcgaw/gluetun:latest
#    container_name: gluetun
#    cap_add:
#      - NET_ADMIN
#    environment:
#      - VPN_SERVICE_PROVIDER=private internet access
#      - OPENVPN_USER="${VPNUSER:-vpn-username}"
#      - OPENVPN_PASSWORD="${VPNPASS:-vpn-password}"
#    #- SERVER_REGIONS=Switzerland
#      - SERVER_REGIONS=${VPNREGION:-Netherlands}"
#      - PORT_FORWARDING=off
#      - FIREWALL_OUTBOUND_SUBNETS=172.29.1.0/24
#      - HTTPPROXY=on
#      - SHADOWSOCKS=on
#      - SHADOWSOCKS_PASSWORD="${SHADOWPASS:-shadow-password}"
#    volumes:
#      - conf-gluetun:/gluetun
#    ports:
#      - 8888:8888/tcp # HTTP proxy
#      - 8388:8388/tcp # Shadowsocks
#      - 8388:8388/udp # Shadowsocks
#      - 8001:8000/tcp # Built-in HTTP control server
## other containers ports
##      - 5076:5076     # hydra
##      - 6595:6595     # deemix
##      - 9117:9117     # jackett
##      - 8000:8000     # pyload
##      - 9666:9666     # pyload optional
##      - 7878:7878     # radarr
##      - 8080:8080     # sabnzbd
##      - 8989:8989     # sonarr
#    restart: "${RESTART:-unless-stopped}"
#    networks:
#      secured-br:
#        ipv4_address: 172.28.1.2
#        aliases:
#          - gluetun

### Searching

  jackett:
  image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=${PUID:-0}
      - PGID=${PGID:-0}
      - TZ="${TZ:-Etc/UTC}"
    volumes:
      - conf-jackett:/config
      - blackhole-torrent:/blackhole #optional for Torrents
    ports:
      - 5076:5076
    networks:
      frontend-br:
        ipv4_address: 172.22.1.11
        aliases:
          - jackett
# When using routing through Gluetun Container use this and comment out the "PORTS" and "FRONTEND-BR" Section
#   network_mode: "service:gluetun"
#   depends_on:
#     - gluetun
    restart: "${RESTART:-unless-stopped}"

  nzbhydra:
  image: lscr.io/linuxserver/nzbhydra2:latest
    container_name: nzbhydra
    environment:
      - PUID=${PUID:-0}
      - PGID=${PGID:-0}
      - TZ="${TZ:-Etc/UTC}"
    volumes:
      - conf-nzbhydra:/config
      - blackhole-torrent:/blackhole-torrents #optional for Torrents
      - blackhole-nzb:/blackhole-nzbs #optional
    ports:
      - 5076:5076
    networks:
      frontend-br:
        ipv4_address: 172.22.1.12
        aliases:
          - nzbhydra
# When using routing through Gluetun Container use this and comment out the "PORTS" and "FRONTEND-BR" Section
#   network_mode: "service:gluetun"
#   depends_on:
#     - gluetun
    restart: "${RESTART:-unless-stopped}"

### Downloading

  deemix:
  image: registry.gitlab.com/bockiii/deemix-docker
    container_name: Deemix
    volumes:
      - conf-deemix:/config
      - dls-deemix:/downloads
    environment:
      - PUID=${PUID:-0}
      - PGID=${PGID:-0}
      - UMASK_SET="${UMASK:-022}"
    ports:
      - 6595:6595
    networks:
      frontend-br:
        ipv4_address: 172.22.1.21
        aliases:
          - deemix
# When using routing through Gluetun Container use this and comment out the "PORTS" and "FRONTEND-BR" Section
#   network_mode: "service:gluetun"
#   depends_on:
#     - gluetun
    restart: "${RESTART:-unless-stopped}"

  pyload-ng:
  image: lscr.io/linuxserver/pyload-ng:latest
    container_name: pyload-ng
    environment:
      - PUID=${PUID:-0}
      - PGID=${PGID:-0}
      - TZ="${TZ:-Etc/UTC}"
    volumes:
      - conf-pyload:/config
      - dls-misc:/downloads #optional
    ports:
      - 8000:8000
      - 9666:9666
    networks:
      frontend-br:
        ipv4_address: 172.22.1.22
        aliases:
          - pyload-ng
# When using routing through Gluetun Container use this and comment out the "PORTS" and "FRONTEND-BR" Section
#   network_mode: "service:gluetun"
#   depends_on:
#     - gluetun
    restart: "${RESTART:-unless-stopped}"

  sabnzbd:
  image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${PUID:-0}
      - PGID=${PGID:-0}
      - TZ="${TZ:-Etc/UTC}"
    volumes:
      - conf-sabnzbd:/config
      - downloads:/downloads #optional
      - dls-incomplete:/incomplete-downloads #optional
      - blackhole-nzb:/blackhole
    ports:
      - 8080:8080
    networks:
      frontend-br:
        ipv4_address: 172.22.1.23
        aliases:
          - sabnzbd
# When using routing through Gluetun Container use this and comment out the "PORTS" and "FRONTEND-BR" Section
#   network_mode: "service:gluetun"
#   depends_on:
#     - gluetun
    restart: "${RESTART:-unless-stopped}"

### ## Youtube-DL
  ytdl-material:
    image: tzahi12345/youtubedl-material:nightly
    container_name: ytdl-material
    environment:
      - PUID=${PUID:-0}
      - PGID=${PGID:-0}
      ALLOW_CONFIG_MUTATIONS: 'true'
      ytdl_mongodb_connection_string: 'mongodb://ytdl-mongo-db:27017'
      ytdl_use_local_db: 'false'
      write_ytdl_config: 'true'
    volumes:
      - conf-ytdl-material:/app/appdata
      - conf-ytdl-subscriptions:/app/subscriptions
      - conf-ytdl-users:/app/users
      - dls-ytdl-audio:/app/audio
      - dls-ytdl-video:/app/video
    ports:
      - 8998:17442
    networks:
      frontend-br:
        ipv4_address: 172.22.1.24
        aliases:
          - ytdl-material
      backend-br:
        ipv4_address: 172.24.1.11
        aliases:
          - ytdl-material
# When using routing through Gluetun Container use this and comment out the "PORTS" and "FRONTEND-BR" Section
#   network_mode: "service:gluetun"
   depends_on:
#     - gluetun
      - ytdl-mongo-db
    restart: "${RESTART:-unless-stopped}"

  ytdl-mongo-db:
    image: mongo
    container_name: ytdl-mongo-db
    logging:
      driver: "none"
    volumes:
      - conf-ytdl-mongo-db:/data/db
    ports:
      - 27017:27017
    networks:
      backend-br:
        ipv4_address: 172.24.1.12
        aliases:
          - ytdl-mongo-db
    restart: "${RESTART:-unless-stopped}"

### Organizing

  beets:
  image: lscr.io/linuxserver/beets:latest
    container_name: beets
    environment:
      - PUID=${PUID:-0}
      - PGID=${PGID:-0}
      - TZ="${TZ:-Etc/UTC}"
    volumes:
      - conf-beets:/config
      - dls-deemix:/downloads #optional
      - dls-music:/dls-music #optional
      - dls-ytdl-audio:/dls-ytdl-audio #optional
      - media-audiobooks:/audiobooks #optional
      - media-music:/music #optional
    ports:
      - 8686:8686
    networks:
      frontend-br:
        ipv4_address: 172.22.1.31
        aliases:
          - beets
# When using routing through Gluetun Container use this and comment out the "PORTS" and "FRONTEND-BR" Section
#   network_mode: "service:gluetun"
#   depends_on:
#     - gluetun
    restart: "${RESTART:-unless-stopped}"

  lidarr:
  image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID:-0}
      - PGID=${PGID:-0}
      - TZ="${TZ:-Etc/UTC}"
    volumes:
      - conf-lidarr:/config
      - dls-music:/downloads #optional
      - media-audiobooks:/audiobooks #optional
      - media-music:/music #optional
    ports:
      - 8686:8686
    networks:
      frontend-br:
        ipv4_address: 172.22.1.32
        aliases:
          - lidarr
# When using routing through Gluetun Container use this and comment out the "PORTS" and "FRONTEND-BR" Section
#   network_mode: "service:gluetun"
#   depends_on:
#     - gluetun
    restart: "${RESTART:-unless-stopped}"

  radarr:
  image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID:-0}
      - PGID=${PGID:-0}
      - TZ="${TZ:-Etc/UTC}"
    volumes:
      - conf-radarr:/config
      - dls-movies:/downloads #optional
      - media-movies:/movies #optional
    ports:
      - 7878:7878
    networks:
      frontend-br:
        ipv4_address: 172.22.1.33
        aliases:
          - radarr
# When using routing through Gluetun Container use this and comment out the "PORTS" and "FRONTEND-BR" Section
#   network_mode: "service:gluetun"
#   depends_on:
#     - gluetun
    restart: "${RESTART:-unless-stopped}"

  sonarr:
  image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID:-0}
      - PGID=${PGID:-0}
      - TZ="${TZ:-Etc/UTC}"
    volumes:
      - conf-sonarr:/config
      - dls-tv:/downloads #optional
      - media-tv:/tv #optional
    ports:
      - 8989:8989
    networks:
      frontend-br:
        ipv4_address: 172.22.1.34
        aliases:
          - sonarr
# When using routing through Gluetun Container use this and comment out the "PORTS" and "FRONTEND-BR" Section
#   network_mode: "service:gluetun"
#   depends_on:
#     - gluetun
    restart: "${RESTART:-unless-stopped}"


networks:
  frontend-br:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: frontend-br
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.22.1.0/24
          gateway: 172.22.1.1
        - subnet: fd4d:6169:6c63:6f77::/64
          gateway: fd4d:6169:6c63:6f77::1
  backend-br:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: backend-br
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.24.1.0/24
          gateway: 172.24.1.1
        - subnet: fd4d:6169:6c63:6f88::/64
          gateway: fd4d:6169:6c63:6f88::1

  secured-br:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: secured-br
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.28.1.0/24
          gateway: 172.28.1.1
        - subnet: fd4d:6169:6c63:6f88::/64
          gateway: fd4d:6169:6c63:6f88::1


volumes:

### Temporary Data Storage

  blackgole-nzb:
    name: blackgole-nzb
    driver: local
    driver_opts:
      type: none
      device: "${TEMPDATA_PATH:-/opt/temp}/blackhole/nzb"
      o: bind

  blackgole-torrent:
    name: blackgole-torrent
    driver: local
    driver_opts:
      type: none
      device: "${TEMPDATA_PATH:-/opt/temp}/blackhole/torrent"
      o: bind

  dls-incomplete:
    name: dls-incomplete
    driver: local
    driver_opts:
      type: none
      device: "${TEMPDATA_PATH:-/opt/temp}/incomplete"
      o: bind

### Downloaded Files

  downloads:
    name: downloads
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/downloads"
      o: bind

  dls-apps:
    name: dls-apps
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/downloads/apps"
      o: bind

  dls-audiobooks:
    name: dls-audiobooks
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/downloads/audiobooks"
      o: bind

  dls-deemix:
    name: dls-deemix
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/downloads/deemix"
      o: bind

  dls-misc:
    name: dls-misc
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/downloads/misc"
      o: bind

  dls-movies:
    name: dls-movies
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/downloads/movies"
      o: bind

  dls-music:
    name: dls-music
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/downloads/music"
      o: bind

  dls-stash:
    name: dls-stash
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/downloads/stash"
      o: bind

  dls-tv:
    name: dls-tv
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/downloads/tv"
      o: bind

  dls-ytdl-audio:
    name: dls-ytdl-audio
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/downloads/ytdl-audio"
      o: bind

  dls-ytdl-video:
    name: dls-ytdl-video
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/downloads/ytdl-video"
      o: bind

### Media Storage
  media:
    name: media
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/media"
      o: bind

  media-audiobooks:
    name: media-audiobooks
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/media/audiobooks"
      o: bind

  media-movies:
    name: media-movies
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/media/movies"
      o: bind

  media-music:
    name: media-music
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/media/music"
      o: bind

  media-tv:
    name: media-tv
    driver: local
    driver_opts:
      type: none
      device: "${DATA_PATH:-/opt/data}/media/tv"
      o: bind

### Configs

  conf-beets:
    name: conf-beets
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/beets"
      o: bind

  conf-deemix:
    name: conf-deemix
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/deemix"
      o: bind

  conf-gluetun:
    name: conf-gluetun
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/gluetun"
      o: bind

  conf-jackett:
    name: conf-jackett
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/jackett"
      o: bind

  conf-lidarr:
    name: conf-lidarr
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/lidarr"
      o: bind

  conf-nzbhydra:
    name: conf-nzbhydra
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/nzbhydra"
      o: bind

  conf-pyload-ng:
    name: conf-pyload-ng
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/pyload-ng"
      o: bind

  conf-radarr:
    name: conf-radarr
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/radarr"
      o: bind

  conf-sabnzbd:
    name: conf-sabnzbd
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/sabnzbd"
      o: bind

  conf-sonarr:
    name: conf-sonarr
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/sonarr"
      o: bind

  conf-swag:
    name: conf-swag
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/swag"
      o: bind

  conf-ytdl-material:
    name: conf-ytdl-material
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/ytdl-material"
      o: bind

  conf-ytdl-subscriptions:
    name: conf-ytdl-subscriptions
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/ytdl-subscriptions"
      o: bind

  conf-ytdl-users:
    name: conf-ytdl-users
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/ytdl-users"
      o: bind

  conf-ytdl-mong-db:
    name: conf-ytdl-mong-db
    driver: local
    driver_opts:
      type: none
      device: "${CONF_PATH:-/opt/appdata}/ytdl-mong-db"
      o: bind
